name: DataCube CI/CD deployment workflow

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up SSH agent and add the private key
      - name: Set up SSH for deployment
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_PRIVATE_KEY }}

      # Step 3: Deploy to the VPS
      - name: Deploy using SSH and Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no your_user@your_vps_ip << EOF
            cd /path/to/your/project

            # Pull the latest code from GitHub
            git pull origin main

            # Build and restart the services using Docker Compose
            docker-compose down
            docker-compose pull
            docker-compose up -d --build

            # Run migrations and collect static files
            docker-compose exec web python manage.py migrate
            docker-compose exec web python manage.py collectstatic --noinput
          EOF



# name: DataCube CI/CD deployment workflow
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   deploy:
#     name: Deploy and Rebuild Containers
#     runs-on: ubuntu-latest

#     steps:
#       - name: Echo New Changes
#         run: echo 'New changes made to main'

#       # THIS IS THE ACTUAL WORKFLOW FILE CONTENT
#       - name: Cleanup SSH Directory
#         run: rm -rf ~/.ssh

#       - name: Install SSH Key
#         uses: shimataro/ssh-key-action@v2.7.0
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

#       - name: Adding Known Hosts
#         run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

#       - name: Connect to Server, Pull Latest Code, and Rebuild Containers with Docker Script
#         run: |
#           ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
#           set -e && \
#           echo 'Current directory: $(pwd)' && \
#           cd ${{ secrets.WORK_DIR }} && \
#           git checkout ${{ secrets.MAIN_BRANCH }} && \
#           git pull && \
#           chmod +x run_docker.sh && \
#           ./run_docker.sh prod \
#           # echo "Github action file succesfull!!!"
#           exit"
#       - name: Cleanup SSH Keys
#         run: rm -rf ~/.ssh
